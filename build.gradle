buildscript {
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.1'
    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
    maven {
        url "https://maven.google.com"
    }
    google()
}

allprojects {
    repositories {
        mavenCentral()
        maven {
            url "https://maven.google.com"
        }
    }
}


dependencies {
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'org.thoughtcrime.ssl.pinning:AndroidPinning:1.0.0'
    implementation 'com.google.android.gms:play-services-location:15.0.0'
    implementation 'joda-time:joda-time:2.9.9'
    implementation 'com.google.guava:guava:23.5-android'
    implementation 'com.google.android.gms:play-services-maps:15.0.0'
    implementation 'com.android.support:preference-v14:27.1.1'
    implementation 'com.sshtools:j2ssh-maverick:1.5.5'
    implementation 'com.fasterxml.jackson:jackson-base:2.9.5'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.5'
}

android {
    compileSdkVersion 27
    buildToolsVersion '28-rc1'

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 27
        versionCode 22
        vectorDrawables.useSupportLibrary=true
        multiDexEnabled true

        versionName "2018.01.01"
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

    }

    signingConfigs {
        /* note:  To build a signed version of nethunter:
        1. Put your keystore in ~/.android/release-keystore and set up a key "nethunter"
        2. set KEYSTORE_PASSWORD and KEY_PASSWORD environment variables before running gradle.  this
           can be done easily by adding them to .bashrc
        (or change the below values, hard-coding or whatever...)
        3. Don't forget to create a proguard.cfg file.  You can find a sample one in the sdk or
           point to it directly.

        release {

            storeFile file("${System.properties['user.home']}" +  "/.android/release.keystore")
            keyAlias "nethunter"

        }
        */

        /* Alternately, you can setup gradle.properties file and read in the values. This was done
        below, with gradle.properties located in your ~/.gradle/ directory
        * */
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + System.currentTimeMillis() + "L)"
            buildConfigField "String", "BUILD_NAME", "\"" + System.getenv("USER") + "\""
            return true
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + System.currentTimeMillis() + "L)"
            /*  enable below to set "built by" name to build machine name
                buildConfigField "String", "BUILD_NAME", "\"" + System.getenv("USER") + "\""
                or change line below to hard code it.  */
            buildConfigField "String", "BUILD_NAME", "\"Kali\""
            return true
        }
    }
}
